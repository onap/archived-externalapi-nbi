<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xmime="http://www.w3.org/2005/05/xmlmime"
           xmlns="http://orange.com/ONAPNBI/api/serviceOrder/v4/model"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           attributeFormDefault="unqualified"
           elementFormDefault="qualified"
           targetNamespace="http://orange.com/ONAPNBI/api/serviceOrder/v4/model">
   <xs:annotation id="signature">
      <xs:appinfo>API Designer</xs:appinfo>
      <xs:documentation>Model: serviceOrder
                    Version: 4.0.0_inProgress
                    Owner: ONAPNBI
                    Generated on: 2019-04-18T12:39:38.945Z
                    Generated by: Orange API Designer v2, model-v1</xs:documentation>
   </xs:annotation>
   <xs:simpleType name="ActionType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="add"/>
         <xs:enumeration value="modify"/>
         <xs:enumeration value="delete"/>
         <xs:enumeration value="noChange"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="StateType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="acknowledged"/>
         <xs:enumeration value="rejected"/>
         <xs:enumeration value="pending"/>
         <xs:enumeration value="held"/>
         <xs:enumeration value="inProgress"/>
         <xs:enumeration value="cancelled"/>
         <xs:enumeration value="completed"/>
         <xs:enumeration value="failed"/>
         <xs:enumeration value="partial"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="RelationshipType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="reliesOn"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="EventType">
      <xs:restriction base="xs:string">
         <xs:enumeration value="ServiceOrderCreationNotification"/>
         <xs:enumeration value="ServiceOrderStateChangeNotification"/>
         <xs:enumeration value="ServiceOrderItemStateChangeNotification"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="SeverityMessage">
      <xs:restriction base="xs:string">
         <xs:enumeration value="information"/>
         <xs:enumeration value="error"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:element name="Error" type="Error">
      <xs:annotation>
         <xs:documentation source="public"/>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="Error">
      <xs:annotation>
         <xs:documentation source="public"/>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="code" type="xs:int" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Application related code (as defined in the API or from a common list)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="reason" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Text that explains the reason for error. This can be shown to a client user.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="message" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Text that provide more details and corrective actions related to the error. This can be shown to a client user</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="status" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">http error code extension like 400-2</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="referenceError" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">url pointing to documentation describing the error</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ServiceRelationship" type="ServiceRelationship">
      <xs:annotation>
         <xs:documentation source="public">Linked Services to the one instantiate
nbi component used this relationship to sort request to ONAP.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ServiceRelationship">
      <xs:annotation>
         <xs:documentation source="public">Linked Services to the one instantiate
nbi component used this relationship to sort request to ONAP.</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="type" type="RelationshipType" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Relationship type. It can be : “reliesOn” if the Service needs another already owned Service to rely on (e.g. an option on an already owned mobile access Service) or “targets” or “isTargeted” (depending on the way of expressing the link) for any other kind of links that may be useful.
Only reliesOn is managed in Beijing release.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="service" type="Service" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Service reference - id of the service targeted.
not managed in Beijing release.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ServiceRef" type="ServiceRef">
      <xs:annotation>
         <xs:documentation source="public">Service references</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ServiceRef">
      <xs:annotation>
         <xs:documentation source="public">Service references</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Unique identifier of the service</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="href" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Reference of the service</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ServiceCharacteristic" type="ServiceCharacteristic">
      <xs:annotation>
         <xs:documentation source="public">ServiceCharacteristic</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ServiceCharacteristic">
      <xs:annotation>
         <xs:documentation source="public">ServiceCharacteristic</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="name" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Name of characteristic</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="valueType" type="xs:string" minOccurs="0"/>
         <xs:element name="value" type="Value" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="RelatedParty" type="RelatedParty">
      <xs:annotation>
         <xs:documentation source="public">A related party defines party which are involved in this order and the role they are playing.
for Beijing release:
With the current version of APIs used from SO and AAI we need to manage a ‘customer’. This customer concept is confusing with Customer BSS concept. We took the following rules to manage the ‘customer’ information:
o	It could be provided through a serviceOrder in the service Order a relatedParty with role ‘ONAPcustomer’ should be provided in the serviceOrder header (we will not consider in this release the party at item level); External API component will check if this customer exists and create it in AAI if not.
o	If no relatedParty are provided the service will be affected to ‘generic’ customer (dummy customer) – we assume this ‘generic’ customer always exists.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="RelatedParty">
      <xs:annotation>
         <xs:documentation source="public">A related party defines party which are involved in this order and the role they are playing.
for Beijing release:
With the current version of APIs used from SO and AAI we need to manage a ‘customer’. This customer concept is confusing with Customer BSS concept. We took the following rules to manage the ‘customer’ information:
o	It could be provided through a serviceOrder in the service Order a relatedParty with role ‘ONAPcustomer’ should be provided in the serviceOrder header (we will not consider in this release the party at item level); External API component will check if this customer exists and create it in AAI if not.
o	If no relatedParty are provided the service will be affected to ‘generic’ customer (dummy customer) – we assume this ‘generic’ customer always exists.</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Unique identifier of a related party</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="href" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">An hyperlink to the party - not used in Beijnig release</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="role" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">The role of the related party (e.g. Owner, requester, fullfiller etc).
ONLY 'ONAPcustomer' is considered</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="name" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Name of the related party</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@referredType" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ServiceSpecificationRef" type="ServiceSpecificationRef">
      <xs:annotation>
         <xs:documentation source="public">The service specification (these attributes are fetched from the catalogue).</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ServiceSpecificationRef">
      <xs:annotation>
         <xs:documentation source="public">The service specification (these attributes are fetched from the catalogue).</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Unique identifier of the service specification
This information will be used to retrieve SDC information + mapped to SO ModelNameVersionIdin the request.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="href" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Reference of the service specification
Not used in Beijing release.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="name" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Name of the service specification
Not used in Beijing release</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="version" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Version of the service Specification
Not used in Beijing release</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="targetServiceSchema" type="TargetServiceSchema" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">This structure could be used to describe the service</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@type" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Not used in Beijing release</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@schemaLocation" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Not used in Beijing release</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@baseType" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Not used in Beijing release</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="Service" type="Service">
      <xs:annotation>
         <xs:documentation source="public">Service (to be added, modified, deleted) description</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="Service">
      <xs:annotation>
         <xs:documentation source="public">Service (to be added, modified, deleted) description</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Identifier of a service instance.
It must be valued if orderItem action is 'delete' and corresponds to a AAI service.id</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="href" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Reference to the Service (useful for delete or modify command).
Not managed in Beijing release.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="name" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Name of the service - When orderItem action is 'add' this name will be used in ONAP/SO request as InstaceName.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="serviceState" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">The lifecycle state of the service requested;
Not managed in Beijing release.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@type" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">To define the service type
Not managed in Beijing Release</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@schemaLocation" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">The URL to get the resource schema.
Not managed in Beijing Release</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="serviceCharacteristic"
                     type="ServiceCharacteristic"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">A list of service characteristics .A name/value pair list used to store instance specific values of attributes. The behavior is equivalent to a MAP data structure where only one entry for any given value of "name" can exist</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="serviceRelationship"
                     type="ServiceRelationship"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">A list or service relationships (ServiceRelationship[*]). Linked Services to the one instantiate, it can be : “reliesOn” if the Service needs another already owned Service to rely on (e.g. an option on an already owned mobile access Service) or “targets” or “isTargeted” (depending on the way of expressing the link) for any other kind of links that may be useful.
Only reliesOn are considered in Beijnig release.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="relatedParty"
                     type="RelatedParty"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">A list of related party parties linked at the Service level (it may be a User for example).
Not managed in Beijing release</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="serviceSpecification"
                     type="ServiceSpecificationRef"
                     minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">A link to the service specification (catalog information)
This is required if orderItem action is add.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="OrderItemRelationship" type="OrderItemRelationship">
      <xs:annotation>
         <xs:documentation source="public">Linked order item to the one containing this attribute.
nbi component used this relationship to sort request to ONAP.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="OrderItemRelationship">
      <xs:annotation>
         <xs:documentation source="public">Linked order item to the one containing this attribute.
nbi component used this relationship to sort request to ONAP.</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="type" type="RelationshipType" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">The type of related order item, can be : dependancy if the order item needs to be “not started” until another order item is complete</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Unique identifier of an order item</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ServiceOrderItem" type="ServiceOrderItem">
      <xs:annotation>
         <xs:documentation source="public">An identified part of the order. A service order is decomposed into one or more order items.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ServiceOrderItem">
      <xs:annotation>
         <xs:documentation source="public">An identified part of the order. A service order is decomposed into one or more order items.</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Identifier of the line item (generally it is a sequence number 01, 02, 03, …)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="action" type="ActionType" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">The action to be carried out on the Service. Can be add, modify, delete, noChange</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="state" type="StateType" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">State of the order item (described in the state machine diagram)
Only Acknowledged, Rejected, InProgress, Completed, Failed will be managed for service order item state</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="percentProgress" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Progress of the delivery in percentage.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@type" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Used to extend the order item.
not used in Beijing relase</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@schemaLocation" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">not used in Beijing relase</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@baseType" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">not used in Beijing relase</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderItemRelationship"
                     type="OrderItemRelationship"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">Linked order item to the one containing this attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="service" type="Service" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">The Service to be acted on by the order item</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderItemMessage"
                     type="OrderMessage"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ServiceOrder" type="ServiceOrder">
      <xs:annotation>
         <xs:documentation source="public">A Service Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ServiceOrder">
      <xs:annotation>
         <xs:documentation source="public">A Service Order is a type of order which can be used to place an order between a customer and a service provider or between a service provider and a partner and vice versa</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">ID created on repository side</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="href" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Hyperlink to access the order</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="externalId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">ID given by the consumer and only understandable by him (to facilitate his searches)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="priority" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">A way that can be used by consumers to prioritize orders in Service Order Management system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">A free-text description of the service order</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="category" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Used to categorize the order that can be useful for the OM system (e.g. “broadband”, “TVOption”, ...)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="state" type="StateType" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">State of the order : described in the state-machine diagram
Only Acknowledged, Rejected, InProgress, Completed, Failed, Partial  will be managed for service order state (Held, Pending and Cancelled are not managed)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderDate" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
         <xs:element name="completionDateTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Date when the order was completed</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="requestedStartDate" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Order start date wished by the requestor</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="requestedCompletionDate" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Requested delivery date from the requestor perspective</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="expectedCompletionDate" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
         <xs:element name="startDate" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Date when the order was started for processing</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@baseType" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
         <xs:element name="@type" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
         <xs:element name="@schemaLocation" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
         <xs:element name="relatedParty"
                     type="RelatedParty"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">A list of related parties which are involved in this order and the role they are playing.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderRelationship"
                     type="OrderRelationship"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">A list of related order references .Linked order to the one containing this attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderItem"
                     type="ServiceOrderItem"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">A list of order items that have to be processed.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderMessage"
                     type="OrderMessage"
                     minOccurs="0"
                     maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="OrderRelationship" type="OrderRelationship">
      <xs:annotation>
         <xs:documentation source="public">Linked order to the one containing this attribute.
This relationship is not used to sort ONAP request.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="OrderRelationship">
      <xs:annotation>
         <xs:documentation source="public">Linked order to the one containing this attribute.
This relationship is not used to sort ONAP request.</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="type" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">The type of related order, can be : “dependency” if the order needs to be “not started” until another order item is complete (a service order in this case) or “cross-ref” to keep track of the source order (a productOrder)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">The id of the related order</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="href" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">A hyperlink to the related order</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@referredType" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Type of the referred order.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="TargetServiceSchema" type="TargetServiceSchema">
      <xs:annotation>
         <xs:documentation source="public">Target to the schema describing the service spec resource</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="TargetServiceSchema">
      <xs:annotation>
         <xs:documentation source="public">Target to the schema describing the service spec resource</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="@type" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Indicates the (class) type of resource.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="@schemaLocation" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">This field provided a link to the schema describing this REST resource.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="Value" type="Value">
      <xs:annotation>
         <xs:documentation source="public">Value is a descriptive structure for service characteristic</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="Value">
      <xs:annotation>
         <xs:documentation source="public">Value is a descriptive structure for service characteristic</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="serviceCharacteristicValue" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Value of the characteristic.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="CreateServiceOrderItem" type="CreateServiceOrderItem">
      <xs:annotation>
         <xs:documentation source="public">This structure is used in the operation POST for a serviceOrder request to describe an item.
Attribute description is not accurate and should be find in the serviceOrderItem class.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateServiceOrderItem">
      <xs:annotation>
         <xs:documentation source="public">This structure is used in the operation POST for a serviceOrder request to describe an item.
Attribute description is not accurate and should be find in the serviceOrderItem class.</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Identifier of the line item (generally it is a sequence number 01, 02, 03, …)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="action" type="ActionType" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">The action to be carried out on the Service. Can be add, modify, delete, noChange</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderItemRelationship"
                     type="OrderItemRelationship"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">Linked order item to the one containing this attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="service" type="Service" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">The Service to be acted on by the order item</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="CreateServiceOrder" type="CreateServiceOrder">
      <xs:annotation>
         <xs:documentation source="public">This structure is used in the operation POST for a serviceOrder request.
Attribute description is not accurate and should be find in the serviceOrder class.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="CreateServiceOrder">
      <xs:annotation>
         <xs:documentation source="public">This structure is used in the operation POST for a serviceOrder request.
Attribute description is not accurate and should be find in the serviceOrder class.</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="externalId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">ID given by the consumer and only understandable by him (to facilitate his searches)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="priority" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">A way that can be used by consumers to prioritize orders in Service Order Management system (from 0 to 4 : 0 is the highest priority, and 4 the lowest)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="description" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">A free-text description of the service order</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="category" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Used to categorize the order that can be useful for the OM system (e.g. “broadband”, “TVOption”, ...)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="requestedStartDate" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Order start date wished by the requestor</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="requestedCompletionDate" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Requested delivery date from the requestor perspective</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="relatedParty"
                     type="RelatedParty"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">A list of related parties which are involved in this order and the role they are playing.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderRelationship"
                     type="OrderRelationship"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">A list of related order references .Linked order to the one containing this attribute</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderItem"
                     type="CreateServiceOrderItem"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">A list of order items that have to be processed.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ServiceOrderSummary" type="ServiceOrderSummary">
      <xs:annotation>
         <xs:documentation source="public">This structure is used to provide a subset of serviceOrder attributes to be provided in particular for notification messages</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ServiceOrderSummary">
      <xs:annotation>
         <xs:documentation source="public">This structure is used to provide a subset of serviceOrder attributes to be provided in particular for notification messages</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">ID created on repository side</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="href" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Hyperlink to access the order</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="externalId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">ID given by the consumer and only understandable by him (to facilitate his searches)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="state" type="StateType" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">State of the order : described in the state-machine diagram
Only Acknowledged, Rejected, InProgress, Completed, Failed, Partial  will be managed for service order state (Held, Pending and Cancelled are not managed)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderDate" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
         <xs:element name="completionDateTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Date when the order was completed</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="Notification" type="Notification">
      <xs:annotation>
         <xs:documentation source="public">Notification structure for a serviceOrdering notification</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="Notification">
      <xs:annotation>
         <xs:documentation source="public">Notification structure for a serviceOrdering notification</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="eventId" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
         <xs:element name="eventDate" type="xs:dateTime" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
         <xs:element name="eventType" type="EventType" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
         <xs:element name="event" type="ServiceOrderSummaryWithItem" minOccurs="1"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ServiceOrderItemSummary" type="ServiceOrderItemSummary">
      <xs:annotation>
         <xs:documentation source="public">Service Order item summary to be used for notification</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ServiceOrderItemSummary">
      <xs:annotation>
         <xs:documentation source="public">Service Order item summary to be used for notification</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Identifier of the line item (generally it is a sequence number 01, 02, 03, …)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="action" type="ActionType" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">The action to be carried out on the Service. Can be add, modify, delete, noChange
modify is not managed in Beijing release.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="state" type="StateType" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">State of the order item (described in the state machine diagram)
Only Acknowledged, Rejected, InProgress, Completed, Failed will be managed for service order item state</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="service" type="Service" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">The Service to be acted on by the order item</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ServiceOrderSummaryWithItem" type="ServiceOrderSummaryWithItem">
      <xs:annotation>
         <xs:documentation source="public">Service order item summary with item description</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ServiceOrderSummaryWithItem">
      <xs:annotation>
         <xs:documentation source="public">Service order item summary with item description</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="id" type="xs:string" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">ID created on repository side</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="href" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Hyperlink to access the order</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="externalId" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">ID given by the consumer and only understandable by him (to facilitate his searches)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="state" type="StateType" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">State of the order : described in the state-machine diagram
Only Acknowledged, Rejected, InProgress, Completed, Failed, Partial  will be managed for service order state (Held, Pending and Cancelled are not managed)</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderDate" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public"/>
            </xs:annotation>
         </xs:element>
         <xs:element name="completionDateTime" type="xs:dateTime" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Date when the order was completed</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="orderItem"
                     type="ServiceOrderItemSummary"
                     minOccurs="0"
                     maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation source="public">A list of order items that have to be processed.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="OrderMessage" type="OrderMessage">
      <xs:annotation>
         <xs:documentation source="public">An optional array of messages associated with the Order</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="OrderMessage">
      <xs:annotation>
         <xs:documentation source="public">An optional array of messages associated with the Order</xs:documentation>
      </xs:annotation>
      <xs:sequence minOccurs="1" maxOccurs="1">
         <xs:element name="code" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">A code associated to this message</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="field" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Service Order attribute related to this error message</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="messageInformation" type="xs:string" minOccurs="0">
            <xs:annotation>
               <xs:documentation source="public">Message related to this order</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="severity" type="SeverityMessage" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Gravity of this message</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="correctionRequired" type="xs:boolean" minOccurs="1">
            <xs:annotation>
               <xs:documentation source="public">Indicator that an action is required to allow service order fullfilment to follow up</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
</xs:schema>
