/*
 * API ServiceOrder serviceOrder API designed for ONAP Beijing Release. This API is build from TMF
 * open API16.5 + applied TMF guideline 3.0
 *
 * OpenAPI spec version: 0.1.1_inProgress
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */


package org.onap.nbi.apis.serviceorder.model;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import java.util.Objects;

/**
 * Extra-information about the order (e.g. useful to add extra delivery information that could be
 * useful for a human process
 */
@ApiModel(
        description = "Extra-information about the order (e.g. useful to add extra delivery information that could be useful for a human process")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen",
        date = "2018-02-19T14:00:30.767Z")
public class Note {
    @JsonProperty("date")
    private Date date = null;

    @JsonProperty("author")
    private String author = null;

    @JsonProperty("text")
    private String text = null;

    public Note date(Date date) {
        this.date = date;
        return this;
    }

    /**
     * Date of the note
     *
     * @return date
     **/
    @JsonProperty("date")
    @ApiModelProperty(value = "Date of the note")
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'")
    public Date getDate() {
        return date;
    }

    public void setDate(Date date) {
        this.date = date;
    }

    public Note author(String author) {
        this.author = author;
        return this;
    }

    /**
     * Author of the note
     *
     * @return author
     **/
    @JsonProperty("author")
    @ApiModelProperty(value = "Author of the note")
    public String getAuthor() {
        return author;
    }

    public void setAuthor(String author) {
        this.author = author;
    }

    public Note text(String text) {
        this.text = text;
        return this;
    }

    /**
     * Text of the note
     *
     * @return text
     **/
    @JsonProperty("text")
    @ApiModelProperty(value = "Text of the note")
    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Note note = (Note) o;
        return Objects.equals(this.date, note.date) && Objects.equals(this.author, note.author)
                && Objects.equals(this.text, note.text);
    }

    @Override
    public int hashCode() {
        return Objects.hash(date, author, text);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Note {\n");

        sb.append("    date: ").append(toIndentedString(date)).append("\n");
        sb.append("    author: ").append(toIndentedString(author)).append("\n");
        sb.append("    text: ").append(toIndentedString(text)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

