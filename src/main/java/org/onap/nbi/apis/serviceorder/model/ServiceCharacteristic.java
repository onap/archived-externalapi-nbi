/*
 * API ServiceOrder serviceOrder API designed for ONAP Beijing Release. This API is build from TMF
 * open API16.5 + applied TMF guideline 3.0
 *
 * OpenAPI spec version: 0.1.1_inProgress
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */


package org.onap.nbi.apis.serviceorder.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.NotNull;
import java.util.Objects;

/**
 * ServiceCharacteristic
 */
@ApiModel(description = "ServiceCharacteristic")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen",
        date = "2018-02-19T14:00:30.767Z")
public class ServiceCharacteristic {
    @JsonProperty("name")
    private String name = null;

    @JsonProperty("valueType")
    private String valueType = null;

    @JsonProperty("value")
    private Value value = null;

    public ServiceCharacteristic name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Name of characteristic
     *
     * @return name
     **/
    @JsonProperty("name")
    @ApiModelProperty(required = true, value = "Name of characteristic")
    @NotNull
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public ServiceCharacteristic valueType(String valueType) {
        this.valueType = valueType;
        return this;
    }

    /**
     * @return valueType
     **/
    @JsonProperty("valueType")
    @ApiModelProperty(value = "")
    public String getValueType() {
        return valueType;
    }

    public void setValueType(String valueType) {
        this.valueType = valueType;
    }

    public ServiceCharacteristic value(Value value) {
        this.value = value;
        return this;
    }

    /**
     * @return value
     **/
    @JsonProperty("value")
    @ApiModelProperty(value = "")
    public Value getValue() {
        return value;
    }

    public void setValue(Value value) {
        this.value = value;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ServiceCharacteristic serviceCharacteristic = (ServiceCharacteristic) o;
        return Objects.equals(this.name, serviceCharacteristic.name)
                && Objects.equals(this.valueType, serviceCharacteristic.valueType)
                && Objects.equals(this.value, serviceCharacteristic.value);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, valueType, value);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ServiceCharacteristic {\n");

        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    valueType: ").append(toIndentedString(valueType)).append("\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}

